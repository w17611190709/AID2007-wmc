前情回顾

1. 线程

   什么是线程 : 多任务编程方法
               运行过程-->占有资源-->共享进程资源
               轻量级的进程--> 包含关系

2. 创建线程

   threading --> Thread()  start()  join()

   线程属性   自定义线程类

3. 同步互斥

   Event()  e.set()  e.clear()  e.wait()

   Lock()   lock.acquire()  lock.release()

   好处: 可以控制多个线程对共享资源的无序使用

   缺点: 降低效率, 死锁问题


ftp 文件服务器

1. 需求分析

    分为服务端和客户端，要求可以有多个客户端同时操作。
    客户端可以查看服务器文件库中有什么文件。
    客户端可以从文件库中下载文件到本地。
    客户端可以上传一个本地文件到文件库。
    使用print在客户端打印命令输入提示，引导操作


2. 技术分析

   并发模型 :  多线程
   网络 :  tcp
   文件传输 :  读取发送    接收写入


3. 模块划分  封装结构

   封装结构 : 使用类封装整理客户端需求功能

   查看文件列表

   上传文件

   下载文件

4. 通信协议设计

                  请求类型     请求参数
   查看文件列表      LIST

   上传文件         STOR       文件名

   下载文件         RETR       文件名

   退出            EXIT

   允许 : OK   不允许:  FAIL

5. 按照模块设计功能逻辑

   框架结构的搭建
      服务端 : 多线程并发模型

      客户端 : 发起连接
              print命令提示界面
              根据输入分情况选择

   查看文件列表
      客户端 :　1. 发起请求
               2. 等待服务端回复
               3. 根据回复分情况处理
          　　　　　Yes 接收文件列表
                   No  结束

